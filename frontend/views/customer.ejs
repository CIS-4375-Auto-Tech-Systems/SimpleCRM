<!DOCTYPE html>
<html>
  <head>
    <title>Customer Page</title>
    <%- include('partials/head.ejs'); %>
    <style>
    table, td, th {
  border-bottom: 1px solid;
  padding: 1%;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1%;
}
th {
  background-color: #0e82b7;
  color: white;
}
img {
  border-radius: 100px;
  margin: 2%;
}

  </style>
  </head>
  <body id="main">
    <div class="container">
      <%- include('partials/navbar.ejs'); %>
      <div class="right-column">
        <%- include('partials/header.ejs'); %>
        <div class="bottomrow">
          <div class="customer-info">
            <div class="profile-photo">
              <img src="/images/profile-placeholder.png" alt="Profile Photo" width="200" height="180">
            </div>
            <div class="customer-details">
              <h1 id="custFirst_name"></h1>
              <h1 id="custMiddle_in"></h1>
              <h1 id="custLast_name"></h1>
              <p id="custAddress"></p>
              <p id="custPhone"></p>
              <p id="custEmail"></p>
            </div>
          </div>
          <div class="vehicle-info">
            <h2>Vehicles</h2>
            <button type="submit" class="btn btn-primary" id="vehicle-button"> Add Vehicle </button>
            <br>
            <table>
              <thead>
                <tr>
                  <th>Make</th>
                  <th>Model</th>
                  <th>Year</th>
                  <th>Plate</th>
                  <th>Color</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="vehicles">
              </tbody>
            </table>
          </div>
          <br>
          <br>
          <div class="service-history">
            <h2>Service History</h2>
            <button type="submit" class="btn btn-primary" id="create-button"> Create Order </button>
            <br>
            <table>
              <thead>
                <tr>
                  <th>Service</th>
                  <th>Date In</th>
                  <th>Date Out</th>
                  <th>Total Amount</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="services">
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <script>
      const sessionStorageControl = {
            //https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage
            storeItem(key, value){
              sessionStorage.setItem(key, value);
            },
            readItem(key){
              return sessionStorage.getItem(key);
            },
            removeItem(key){
              sessionStorage.removeItem(key);
            }
          }

          //Create Order pop-up block
          const CreateOrder = document.getElementById("create-button");
          CreateOrder.addEventListener("click", () => {
            openOrderForm();
          });

          const AddVehicle = document.getElementById("vehicle-button");
          AddVehicle.addEventListener("click", () => {
            openVehicleForm();
          });

          //This function just opens the window and the parameters of the window.open method
          //in parenthesis are 1.URL of the page to open (this case its empty so a new window can open)
          //2. name of the page, if refering to it later and 3. the window features
          function openOrderForm() {
            const orderwindow = window.open("http://localhost:5173/createorder","Order Form","width=550, height=600");}
          
          function openVehicleForm() {
            const addvehicle = window.open("http://localhost:5173/createvehicle","Order Form","width=550, height=600");}


          // Read cust_id from session storage
          const cust_id = sessionStorageControl.readItem("cust_id");
          async function getCust (custID) {
            const response = await fetch("http://localhost:3000/customer");
            const customers = await response.json();
            let match = '';
            customers.forEach(customer => {
              if (customer[0] == custID){
                match = customer;
              }
            });
            return match
          }
          async function getVehicle (custID) {
            const response = await fetch("http://localhost:3000/vehicle");
            const vehicles = await response.json();
            let match = [];
            vehicles.forEach(vehicle => {
              if (vehicle[1] == custID){
                match.push(vehicle);
              }
            });
            return match
          }
          async function getVehicleModel (modelID) {
            const response = await fetch("http://localhost:3000/vehicle-model");
            const models = await response.json();
            let match = '';
            models.forEach(model => {
              if (model[0] == modelID){
                match = model;
              }
            });
            return match
          }
          async function getVehicleMake (makeID) {
            const response = await fetch("http://localhost:3000/vehicle-make");
            const makes = await response.json();
            let match = '';
            makes.forEach(make => {
              if (make[0] == makeID){
                match = make;
              }
            });
            return match
          }
          async function getColor(colorID) {
            const response = await fetch("http://localhost:3000/color");
            const colors = await response.json();
            let match = '';
            colors.forEach(color => {
              if (color[0] == colorID){
                match = color;
              }
            });
            return match
          }
          async function getServiceOrder (custID) {
            const response = await fetch("http://localhost:3000/service-order");
            const orders = await response.json();
            let match = [];
            orders.forEach(serviceOrder => {
              if (serviceOrder[2] == custID){
                match.push(serviceOrder);
              }
            });
            return match
          }
          async function getService (serviceID) {
            const response = await fetch("http://localhost:3000/service");
            const services = await response.json();
            let match = '';
            services.forEach(service => {
              if (service[0] == serviceID){
                match = service;
              }
            });
            return match
          }
          async function getOrderStatus (orderStatusID) {
            const response = await fetch ("http://localhost:3000/order-status");
            const orderStatuses = await response.json();
            let match = '';
            orderStatuses.forEach(order_status => {
              if (order_status[0] == orderStatusID) {
                match = order_status;
              }
            });
            return match
          }

          async function createPage (custID) {
            /* CUSTOMER */ // customer
            // GET customer table
            const customer = await getCust(custID);
            const custFirst_name = customer[3] || 'No First Name Found';
            const custMiddle_in = customer[4];
            const custLast_name = customer[5] || 'No Last Name Found';
            const custAddress = customer[6] || 'No Address Found';
            const custPhone = customer[9] || 'No Phone Number Found';
            const custEmail = customer[10] || 'No Email Found';
            // Elements for Customer Section
            const custFirst_nameEle = document.getElementById("custFirst_name");
            const custMiddle_inEle = document.getElementById("custMiddle_in");
            const custLast_nameEle = document.getElementById("custLast_name");
            const custAddressEle = document.getElementById("custAddress");
            const custPhoneEle = document.getElementById("custPhone");
            const custEmailEle = document.getElementById("custEmail");
            // Add Dynamic Information
            custFirst_nameEle.textContent = custFirst_name;
            custMiddle_inEle.textContent = custMiddle_in;
            custLast_nameEle.textContent = custLast_name;
            custAddressEle.textContent = custAddress;
            custPhoneEle.textContent = custPhone;
            custEmailEle.textContent = custEmail;

            /* VEHICLE */ //vehicle, vehicle_make, vehicle_model
            // GET vehicle table
            const vehicles = await getVehicle(custID);
            const vehiclesTable = document.getElementById("vehicles");
            for (const vehicle of vehicles) {
              let vehicle_id = vehicle[0]
              const color_id = vehicle[2];
              const vehicleModel = vehicle[3];
              const vehicleYear = vehicle[4] || 'No Year Found';
              const vehiclePlate = vehicle[5] || 'No Plate Found';
                // GET vehicle_make table
              const vehicle_makes = await getVehicleMake(vehicle_id);
              const makeId = vehicle_makes[0];
              const makeName = vehicle_makes[1] || 'No Make Found';
                // GET vehicle_model table
              const vehicle_models = await getVehicleModel(makeId);
              const vehicle_modelName = vehicle_models[2] || 'No Model Found';
                // GET color table
              const colors = await getColor(color_id);
              const vehicleColor = colors[1] || 'No Color Found';

              // Create Row identified by vehicle_id
              let vehicleRow = document.createElement("tr");
              vehicleRow.setAttribute("id", vehicle_id);
              vehiclesTable.appendChild(vehicleRow);
                // Create Entry
              let makeEle = document.createElement("td");
              let makeText = document.createTextNode(makeName);
              makeEle.appendChild(makeText);
              vehicleRow.appendChild(makeEle);

              let modelEle = document.createElement("td");
              let modelText = document.createTextNode(vehicle_modelName);
              modelEle.appendChild(modelText);
              vehicleRow.appendChild(modelEle);

              let yearEle = document.createElement("td");
              let yearText = document.createTextNode(vehicleYear);
              yearEle.appendChild(yearText);
              vehicleRow.appendChild(yearEle);

              let plateEle = document.createElement("td");
              let plateText = document.createTextNode(vehiclePlate);
              plateEle.appendChild(plateText);
              vehicleRow.appendChild(plateEle);

              let colorEle = document.createElement("td");
              let colorText = document.createTextNode(vehicleColor);
              colorEle.appendChild(colorText);
              vehicleRow.appendChild(colorEle);

              let vehicleAction = document.createElement("button");
              let vehicleActionText = document.createTextNode("Edit");
              vehicleAction.appendChild(vehicleActionText);
              vehicleRow.appendChild(vehicleAction);
            }
            /* SERVICE HISTORY */ //service_order, service
            // GET serivce_order table
            const service_order = await getServiceOrder(cust_id);
            const servicesTable = document.getElementById("services");
            for (const order of service_order){
              let order_id = order[0];
              let order_status_id = order[5]
              let service_id = order[6];
              let ttlAmount = order[7];
              let dateinRAW = new Date (order[8]);
              let datein = dateinRAW.toLocaleDateString();
              let dateoutRAW = new Date(order[9]);
              let dateout = dateoutRAW.toLocaleDateString();
              // GET service table
              let service = await getService(service_id);
              let service_name = service[1];

              // Create Row identified by order_id
              let serviceRow = document.createElement("tr");
              serviceRow.setAttribute("id", order_id);
              servicesTable.appendChild(serviceRow);
                // Create Entry
              let serviceEle = document.createElement("td");
              let serviceText = document.createTextNode(service_name);
              serviceEle.appendChild(serviceText);
              serviceRow.appendChild(serviceEle);

              let dateInEle = document.createElement("td");
              let dateInText = document.createTextNode(datein);
              dateInEle.appendChild(dateInText);
              serviceRow.appendChild(dateInEle);

              let dateOutEle = document.createElement("td");
              let dateOutText = document.createTextNode(dateout);
              dateOutEle.appendChild(dateOutText);
              serviceRow.appendChild(dateOutEle);

              let totalEle = document.createElement("td");
              let totalText = document.createTextNode(ttlAmount);
              totalEle.appendChild(totalText);
              serviceRow.appendChild(totalEle);

              let orderAction = document.createElement("button");
              let orderActionText = document.createTextNode("Edit");
              orderAction.appendChild(orderActionText);
              serviceRow.appendChild(orderAction);
            }
          }
          createPage(cust_id);
          // Delete cust_id from session storage when the page is unloaded
          window.addEventListener('beforeunload', function(event) {
            sessionStorageControl.removeItem("cust_id");
          });
    </script>
  </body>
</html>
