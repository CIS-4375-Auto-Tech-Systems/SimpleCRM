<!DOCTYPE html>
<html>
  <head>
    <title>employee Page</title>
    <%- include('partials/head.ejs'); %>
    <style>
    table, td, th {
  border-bottom: 1px solid;
  padding: 1%;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1%;
}
th {
  background-color: #0e82b7;
  color: white;
}
img {
  border-radius: 100px;
  margin: 2%;
}
.row {
      display: flex;
      flex-wrap: wrap;
      margin: 0 -10px;
}

.column {
      width: 50%;
      padding: 0 10px;
}
  </style>
  </head>
  <body id="main">
    <div class="container">
      <%- include('partials/navbar.ejs'); %>
      <div class="right-column">
        <%- include('partials/header.ejs'); %>
        <div class="bottomrow">
          <div class="row">
            <div class="column">
              <img id="preview" src="/images/profile-placeholder.png" alt="Profile Photo" width="200" height="180">
              <input type="file" id="photo" onchange="previewPhoto()">
            </div>
            <div class="column">
              <h1 id="empFirst_name"></h1>
              <h1 id="empMiddle_in"></h1>
              <h1 id="empLast_name"></h1>
              <p id="empAddress"></p>
              <p id="empPhone"></p>
              <p id="empEmail"></p>
              <button type="submit" class="btn btn-primary" id="info-button"> Edit</button>
            </div>
          </div>
          <div class="vehicle-info">
            <h2>Vehicles</h2>
            <button type="submit" class="btn btn-primary" id="vehicle-button"> Add Vehicle </button>
            <br>
            <table>
              <thead>
                <tr>
                  <th>Make</th>
                  <th>Model</th>
                  <th>Year</th>
                  <th>Plate</th>
                  <th>Color</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="vehicles">
              </tbody>
            </table>
          </div>
          <br>
          <br>
          <div class="service-history">
            <h2>Service History</h2>
            <button type="submit" class="btn btn-primary" id="create-button"> Create Order </button>
            <br>
            <table>
              <thead>
                <tr>
                  <th>Service</th>
                  <th>Date In</th>
                  <th>Date Out</th>
                  <th>Total Amount</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody id="services">
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
    <script>
      const sessionStorageControl = {
            //https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage
            storeItem(key, value){
              sessionStorage.setItem(key, value);
            },
            readItem(key){
              return sessionStorage.getItem(key);
            },
            removeItem(key){
              sessionStorage.removeItem(key);
            }
          }

          //Create Order button event listener, then performs fuction
          const CreateOrder = document.getElementById("create-button");
          CreateOrder.addEventListener("click", () => {
            openOrderForm();
          });
          function openOrderForm() { //The fuction that opens the form in another window
            const orderwindow = window.open("http://localhost:5173/createorder","Order Form","width=550, height=600");}
        
          //Add Vehicle button event listener, then performs function
          const AddVehicle = document.getElementById("vehicle-button");
          AddVehicle.addEventListener("click", () => {
            openVehicleForm();
          });
          function openVehicleForm() { //The fuction that opens the form in another window
            const addvehicle = window.open("http://localhost:5173/createvehicle","Vehicle Form","width=550, height=600");}
          
          //Edit employee info button
          const EditemployeeInfo = document.getElementById("info-button");
          EditemployeeInfo.addEventListener("click", () => {
            openEditempForm();
          });
          function openEditempForm() { //The fuction that opens the form in another window
            window.location.href="/editemployee";
          }



          // Read emp_id from session storage
          const emp_id = sessionStorageControl.readItem("emp_id");
          async function getemp (empID) {
            const response = await fetch("http://localhost:3000/employee");
            const employees = await response.json();
            let match = '';
            employees.forEach(employee => {
              if (employee[0] == empID){
                match = employee;
              }
            });
            return match
          }



          //Edit with session storage

          async function createPage (empID) {
            /* employee */ // employee
            // GET employee table
            const employee = await getemp(empID);
            const empFirst_name = employee[3] || 'No First Name Found';
            const empMiddle_in = employee[4];
            const empLast_name = employee[5] || 'No Last Name Found';
            const empAddress = employee[6] || 'No Address Found';
            const empPhone = employee[9] || 'No Phone Number Found';
            const empEmail = employee[10] || 'No Email Found';
            // Elements for employee Section
            const empFirst_nameEle = document.getElementById("empFirst_name");
            const empMiddle_inEle = document.getElementById("empMiddle_in");
            const empLast_nameEle = document.getElementById("empLast_name");
            const empAddressEle = document.getElementById("empAddress");
            const empPhoneEle = document.getElementById("empPhone");
            const empEmailEle = document.getElementById("empEmail");
            // Add Dynamic Information
            empFirst_nameEle.textContent = empFirst_name;
            empMiddle_inEle.textContent = empMiddle_in;
            empLast_nameEle.textContent = empLast_name;
            empAddressEle.textContent = empAddress;
            empPhoneEle.textContent = empPhone;
            empEmailEle.textContent = empEmail;

            /* VEHICLE */ //vehicle, vehicle_make, vehicle_model
            // GET vehicle table
            const vehicles = await getVehicle(empID);
            const vehiclesTable = document.getElementById("vehicles");
            for (const vehicle of vehicles) {
              let vehicle_id = vehicle[0]
              const color_id = vehicle[2];
              const vehicleModel = vehicle[3];
              const vehicleYear = vehicle[4] || 'No Year Found';
              const vehiclePlate = vehicle[5] || 'No Plate Found';
              // GET vehicle_model table
              const vehicle_models = await getVehicleModel(vehicleModel);
              const makeId = vehicle_models[0][1];
              const vehicle_modelName = vehicle_models[0][2] || 'No Model Found';
              // GET vehicle_make table
              const vehicle_makes = await getVehicleMake(makeId);
              const makeName = vehicle_makes[0][1] || 'No Make Found';
                // GET color table
              const colors = await getColor(color_id);
              const vehicleColor = colors[1] || 'No Color Found';

              // Create Row identified by vehicle_id
              let vehicleRow = document.createElement("tr");
              vehicleRow.setAttribute("id", vehicle_id);
              vehiclesTable.appendChild(vehicleRow);
                // Create Entry
              let makeEle = document.createElement("td");
              let makeText = document.createTextNode(makeName);
              makeEle.appendChild(makeText);
              vehicleRow.appendChild(makeEle);

              let modelEle = document.createElement("td");
              let modelText = document.createTextNode(vehicle_modelName);
              modelEle.appendChild(modelText);
              vehicleRow.appendChild(modelEle);

              let yearEle = document.createElement("td");
              let yearText = document.createTextNode(vehicleYear);
              yearEle.appendChild(yearText);
              vehicleRow.appendChild(yearEle);

              let plateEle = document.createElement("td");
              let plateText = document.createTextNode(vehiclePlate);
              plateEle.appendChild(plateText);
              vehicleRow.appendChild(plateEle);

              let colorEle = document.createElement("td");
              let colorText = document.createTextNode(vehicleColor);
              colorEle.appendChild(colorText);
              vehicleRow.appendChild(colorEle);

              let vehicleAction = document.createElement("button");
              let vehicleActionText = document.createTextNode("Edit");
              vehicleAction.setAttribute("data-vehicle_id", vehicle_id);
              vehicleAction.setAttribute("onclick", "editVehicle(this.dataset.vehicle_id)");
              vehicleAction.appendChild(vehicleActionText);
              vehicleRow.appendChild(vehicleAction);
            }
            /* SERVICE HISTORY */ //service_order, service
            // GET serivce_order table
            const service_order = await getServiceOrder(emp_id);
            const servicesTable = document.getElementById("services");
            for (const order of service_order){
              let order_id = order[0];
              let order_status_id = order[5]
              let service_id = order[6];
              let ttlAmount = order[7];
              let dateinRAW = new Date (order[8]);
              let datein = dateinRAW.toLocaleDateString();
              let dateoutRAW = new Date(order[9]);
              let dateout = dateoutRAW.toLocaleDateString();
              // GET service table
              let service = await getService(service_id);
              let service_name = service[1];

              // Create Row identified by order_id
              let serviceRow = document.createElement("tr");
              serviceRow.setAttribute("id", order_id);
              servicesTable.appendChild(serviceRow);
                // Create Entry
              let serviceEle = document.createElement("td");
              let serviceText = document.createTextNode(service_name);
              serviceEle.appendChild(serviceText);
              serviceRow.appendChild(serviceEle);

              let dateInEle = document.createElement("td");
              let dateInText = document.createTextNode(datein);
              dateInEle.appendChild(dateInText);
              serviceRow.appendChild(dateInEle);

              let dateOutEle = document.createElement("td");
              let dateOutText = document.createTextNode(dateout);
              dateOutEle.appendChild(dateOutText);
              serviceRow.appendChild(dateOutEle);

              let totalEle = document.createElement("td");
              let totalText = document.createTextNode("$"+ttlAmount);
              totalEle.appendChild(totalText);
              serviceRow.appendChild(totalEle);

              let orderAction = document.createElement("button");
              let orderActionText = document.createTextNode("Edit");
              orderAction.setAttribute("data-order_id", order_id);
              orderAction.setAttribute("onclick", "editServiceOrder(this.dataset.order_id)");
              orderAction.appendChild(orderActionText);
              serviceRow.appendChild(orderAction);
            }
          }
          createPage(emp_id);
          function previewPhoto() {
            const preview = document.getElementById('preview');
            const file = document.getElementById('photo').files[0];
            const reader = new FileReader();

    reader.onloadend = function() {
    preview.src = reader.result;
    // Save image data to local storage with key that includes employee ID
    const emp_id = sessionStorageControl.readItem("emp_id");
    localStorage.setItem(`profile_photo_${emp_id}`, reader.result);
  }

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.src = "/images/profile-placeholder.png";
    // Clear saved image data from local storage with key that includes employee ID
    const emp_id = sessionStorageControl.readItem("emp_id");
    localStorage.removeItem(`profile_photo_${emp_id}`);
  }
}
const empid = sessionStorageControl.readItem("emp_id");

// Load saved profile photo from local storage with key that includes employee ID
const savedPhoto = localStorage.getItem(`profile_photo_${emp_id}`);
if (savedPhoto) {
  const preview = document.getElementById('preview');
  preview.src = savedPhoto;
}
    </script>
  </body>
</html>
